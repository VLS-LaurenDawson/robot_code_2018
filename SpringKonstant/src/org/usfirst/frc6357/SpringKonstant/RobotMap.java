// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6357.SpringKonstant;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Solenoid climbingSolenoid1;
    public static SpeedController baseFrontLeft;
    public static SpeedController baseCenterLeft;
    public static SpeedController baseBackLeft;
    public static SpeedController baseFrontRight;
    public static SpeedController baseCetnerRight;
    public static SpeedController baseBackRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        climbingSolenoid1 = new Solenoid(0, 0);
        LiveWindow.addActuator("Climbing", "Solenoid 1", climbingSolenoid1);
        
        baseFrontLeft = new Talon(0);
        LiveWindow.addActuator("Base", "FrontLeft", (Talon) baseFrontLeft);
        
        baseCenterLeft = new Talon(4);
        LiveWindow.addActuator("Base", "Center Left", (Talon) baseCenterLeft);
        
        baseBackLeft = new Talon(5);
        LiveWindow.addActuator("Base", "Back Left", (Talon) baseBackLeft);
        
        baseFrontRight = new Talon(1);
        LiveWindow.addActuator("Base", "FrontRight", (Talon) baseFrontRight);
        
        baseCetnerRight = new Talon(2);
        LiveWindow.addActuator("Base", "CetnerRight", (Talon) baseCetnerRight);
        
        baseBackRight = new Talon(3);
        LiveWindow.addActuator("Base", "Back Right", (Talon) baseBackRight);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
